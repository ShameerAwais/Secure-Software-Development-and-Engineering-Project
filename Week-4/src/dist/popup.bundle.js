(()=>{"use strict";document.addEventListener("DOMContentLoaded",(()=>{console.log("Popup script loaded and DOMContentLoaded event fired.");const e=document.getElementById("scanBtn"),t=document.getElementById("result"),n=document.getElementById("settingsBtn");e.addEventListener("click",(async()=>{t.textContent="Scanning current page...",t.className="result-container scanning",e.disabled=!0;try{const[n]=await chrome.tabs.query({active:!0,currentWindow:!0});if(!n||!n.url)throw new Error("Could not get current tab URL");chrome.runtime.sendMessage({type:"checkUrl",url:n.url},(n=>{if(n&&n.result){const e=n.result.toString().trim();e.includes("Please enable user consent")?(t.textContent="Please enable user consent in settings first",t.className="result-container warning"):e.includes("Phishing site detected")?(t.textContent="Phishing site detected",t.className="result-container danger"):e.includes("Safe site")?(t.textContent="Safe site",t.className="result-container safe"):e.includes("Error")?(t.textContent="Error: "+e.replace("Error:","").trim(),t.className="result-container danger"):(t.textContent="Error: Invalid response format",t.className="result-container danger")}else t.textContent="Error checking URL",t.className="result-container danger";e.disabled=!1}))}catch(n){console.error("Error:",n),t.textContent="Error: "+n.message,t.className="result-container danger",e.disabled=!1}})),n.addEventListener("click",(()=>{chrome.runtime.openOptionsPage()}))}))})();
//# sourceMappingURL=popup.bundle.js.map