(()=>{"use strict";const e=async(e,t)=>{try{if(!e||"string"!=typeof e)throw new Error("Invalid URL");return await(async e=>{try{const t=[/(?:login|account|verify|secure|update|confirm)\./i,/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/,/\.(?:tk|ml|ga|cf|gq|xyz)$/i,/([^.]+\.){4,}/,/(?:paypal|bank|amazon|apple|microsoft|google|facebook)\.(?!com|org|net)/i];for(const n of t)if(n.test(e))return!0;return!1}catch(e){return console.error("Error in ML prediction:",e),!1}})(e)}catch(e){throw console.error("Error checking URL:",e),e}},t=async(e,t,n,r)=>{console.log(`[${e}] ${t}`,{context:n,data:r})},n=self.crypto.randomUUID();let r=null,o={userConsent:!1,enableML:!0,enableRealtime:!0,enableNotifications:!0};async function i(){try{await(async e=>`token-${e}`)(n),r=(e=>`session-${e}`)(n),o.enableML&&await(async()=>(console.log("ML Engine initialized"),!0))()}catch(e){console.error("Failed to initialize secure session:",e)}}chrome.storage.sync.get(["userConsent","enableML","enableRealtime","enableNotifications"],(async e=>{o={...o,...e},await i()}));const a=["https://www.google.com","https://www.github.com","https://www.microsoft.com"];chrome.webNavigation.onCompleted.addListener((async r=>{if(!o.enableRealtime||!o.userConsent)return;const i=r.url;if(i&&!function(e){return a.some((t=>e.startsWith(t)))}(i))try{0,await e(i)&&(chrome.action.setBadgeText({text:"⚠️",tabId:r.tabId}),chrome.action.setBadgeBackgroundColor({color:"red",tabId:r.tabId}),o.enableNotifications&&chrome.notifications.create({type:"basic",iconUrl:"icon48.png",title:"Phishing Alert",message:"A potential phishing site has been detected!"}),await t("warning","Phishing site detected",{clientId:n},{url:i}))}catch(e){console.error("Error in navigation handler:",e),await t("error","Navigation handler error",{clientId:n},{error:e.message})}}),{url:[{urlMatches:"https?://.*"}]}),chrome.tabs.onUpdated.addListener(((r,i,a)=>{"complete"===i.status&&a.url.startsWith("http")&&async function(r,i){try{if(!o.userConsent)return void console.log("User consent not given, skipping URL check");await e(r)?(chrome.action.setBadgeText({text:"⚠️",tabId:i}),chrome.action.setBadgeBackgroundColor({color:"red",tabId:i}),o.enableNotifications&&chrome.notifications.create({type:"basic",iconUrl:"icon48.png",title:"Phishing Alert",message:"A potential phishing site has been detected!"}),await t("warning","Phishing site detected",{clientId:n},{url:r})):chrome.action.setBadgeText({text:"",tabId:i})}catch(e){console.error("Error checking URL:",e),await t("error","URL check error",{clientId:n},{error:e.message})}}(a.url,r)})),chrome.runtime.onMessage.addListener(((t,n,r)=>{if("checkUrl"===t.type&&t.url)return o.userConsent?(e(t.url).then((e=>{r({result:e?"Phishing site detected":"Safe site",timestamp:Date.now()})})).catch((e=>{console.error("Error checking URL:",e),r({result:"Error: "+e.message,timestamp:Date.now()})})),!0):(r({result:"Please enable user consent in settings first",timestamp:Date.now()}),!0);"settingsUpdated"===t.type&&(o={...o,...t.settings},void 0!==t.settings.enableML&&i().catch(console.error))})),i().catch((e=>{console.error("Failed to initialize secure session:",e)}))})();
//# sourceMappingURL=background.bundle.js.map